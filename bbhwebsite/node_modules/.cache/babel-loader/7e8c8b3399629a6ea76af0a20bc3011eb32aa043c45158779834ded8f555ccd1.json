{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\teste\\\\Desktop\\\\Code\\\\BBH\\\\bbhwebsite\\\\src\\\\components\\\\Contestants.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ContestantsList() {\n  _s();\n  const [contestants, setContestants] = useState({}); // Using an object to store contestants keyed by their ID\n\n  useEffect(() => {\n    const fetchContestants = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:5000/contestants');\n        if (!response.ok) {\n          throw new Error('Failed to fetch contestants');\n        }\n        const data = await response.json();\n        const contestantsDict = data.reduce((acc, contestant) => {\n          acc[contestant.id] = contestant;\n          return acc;\n        }, {});\n        setContestants(contestantsDict);\n      } catch (error) {\n        console.error('Error fetching contestants:', error);\n      }\n    };\n    fetchContestants();\n  }, []); // The empty dependency array ensures this effect runs once on mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Contestants\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Object.values(contestants).map(contestant => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [contestant.name, \" - Status: \", contestant.status]\n      }, contestant.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(ContestantsList, \"MYpgaIJK5VTNXpO0EupEGcACmTM=\");\n_c = ContestantsList;\nexport default ContestantsList;\nvar _c;\n$RefreshReg$(_c, \"ContestantsList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ContestantsList","_s","contestants","setContestants","fetchContestants","response","fetch","ok","Error","data","json","contestantsDict","reduce","acc","contestant","id","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","values","map","name","status","_c","$RefreshReg$"],"sources":["C:/Users/teste/Desktop/Code/BBH/bbhwebsite/src/components/Contestants.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction ContestantsList() {\r\n  const [contestants, setContestants] = useState({}); // Using an object to store contestants keyed by their ID\r\n\r\n  useEffect(() => {\r\n    const fetchContestants = async () => {\r\n      try {\r\n        const response = await fetch('http://127.0.0.1:5000/contestants');\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch contestants');\r\n        }\r\n        const data = await response.json();\r\n        const contestantsDict = data.reduce((acc, contestant) => {\r\n          acc[contestant.id] = contestant;\r\n          return acc;\r\n        }, {});\r\n        setContestants(contestantsDict);\r\n      } catch (error) {\r\n        console.error('Error fetching contestants:', error);\r\n      }\r\n    };\r\n\r\n    fetchContestants();\r\n  }, []); // The empty dependency array ensures this effect runs once on mount\r\n\r\n  return (\r\n    <div>\r\n      <h1>Contestants</h1>\r\n      <ul>\r\n        {Object.values(contestants).map((contestant) => (\r\n          <li key={contestant.id}>\r\n            {contestant.name} - Status: {contestant.status}\r\n            {/* Render additional contestant details here */}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContestantsList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEpDC,SAAS,CAAC,MAAM;IACd,MAAMO,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,CAAC;QACjE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClC,MAAMC,eAAe,GAAGF,IAAI,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEC,UAAU,KAAK;UACvDD,GAAG,CAACC,UAAU,CAACC,EAAE,CAAC,GAAGD,UAAU;UAC/B,OAAOD,GAAG;QACZ,CAAC,EAAE,CAAC,CAAC,CAAC;QACNV,cAAc,CAACQ,eAAe,CAAC;MACjC,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IAEDZ,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEL,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBvB,OAAA;MAAAmB,QAAA,EACGK,MAAM,CAACC,MAAM,CAACtB,WAAW,CAAC,CAACuB,GAAG,CAAEX,UAAU,iBACzCf,OAAA;QAAAmB,QAAA,GACGJ,UAAU,CAACY,IAAI,EAAC,aAAW,EAACZ,UAAU,CAACa,MAAM;MAAA,GADvCb,UAAU,CAACC,EAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGlB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACrB,EAAA,CArCQD,eAAe;AAAA4B,EAAA,GAAf5B,eAAe;AAuCxB,eAAeA,eAAe;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}