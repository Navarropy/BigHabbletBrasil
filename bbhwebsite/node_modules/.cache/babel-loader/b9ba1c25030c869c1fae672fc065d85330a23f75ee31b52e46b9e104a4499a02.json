{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\teste\\\\Desktop\\\\Code\\\\BBH\\\\bbhwebsite\\\\src\\\\components\\\\PostCreate.js\",\n  _s = $RefreshSig$();\n// components/PostCreate.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostCreate() {\n  _s();\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [password, setPassword] = useState(''); // State to hold the password\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const postData = {\n      title,\n      body,\n      image_url: imageUrl,\n      password\n    }; // Include the password in the postData object\n\n    try {\n      const response = await fetch('http://localhost:5000/create-post', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(postData)\n      });\n      if (response.ok) {\n        // Reset form or redirect to posts list\n        setTitle('');\n        setBody('');\n        setImageUrl('');\n        setPassword(''); // Reset password field\n        alert('Post created successfully!');\n      } else {\n        alert('Failed to create the post. Please check your password.');\n      }\n    } catch (error) {\n      console.error('There was an error creating the post:', error);\n      alert('Error creating post.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create a New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"title\",\n          type: \"text\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"body\",\n          children: \"Body:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"body\",\n          value: body,\n          onChange: e => setBody(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"image-url\",\n          children: \"Image URL (optional):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"image-url\",\n          type: \"text\",\n          value: imageUrl,\n          onChange: e => setImageUrl(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"password\",\n          type: \"password\" // Use type=\"password\" to hide password input\n          ,\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(PostCreate, \"P94mMj3wyJrb/ifZlLG+ISDayrM=\");\n_c = PostCreate;\nexport default PostCreate;\nvar _c;\n$RefreshReg$(_c, \"PostCreate\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PostCreate","_s","title","setTitle","body","setBody","imageUrl","setImageUrl","password","setPassword","handleSubmit","e","preventDefault","postData","image_url","response","fetch","method","headers","JSON","stringify","ok","alert","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/teste/Desktop/Code/BBH/bbhwebsite/src/components/PostCreate.js"],"sourcesContent":["// components/PostCreate.js\r\nimport React, { useState } from 'react';\r\n\r\nfunction PostCreate() {\r\n  const [title, setTitle] = useState('');\r\n  const [body, setBody] = useState('');\r\n  const [imageUrl, setImageUrl] = useState('');\r\n  const [password, setPassword] = useState(''); // State to hold the password\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const postData = { title, body, image_url: imageUrl, password }; // Include the password in the postData object\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/create-post', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(postData),\r\n      });\r\n\r\n      if (response.ok) {\r\n        // Reset form or redirect to posts list\r\n        setTitle('');\r\n        setBody('');\r\n        setImageUrl('');\r\n        setPassword(''); // Reset password field\r\n        alert('Post created successfully!');\r\n      } else {\r\n        alert('Failed to create the post. Please check your password.');\r\n      }\r\n    } catch (error) {\r\n      console.error('There was an error creating the post:', error);\r\n      alert('Error creating post.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Create a New Post</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"title\">Title:</label>\r\n          <input\r\n            id=\"title\"\r\n            type=\"text\"\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"body\">Body:</label>\r\n          <textarea\r\n            id=\"body\"\r\n            value={body}\r\n            onChange={(e) => setBody(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"image-url\">Image URL (optional):</label>\r\n          <input\r\n            id=\"image-url\"\r\n            type=\"text\"\r\n            value={imageUrl}\r\n            onChange={(e) => setImageUrl(e.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"password\">Password:</label>\r\n          <input\r\n            id=\"password\"\r\n            type=\"password\" // Use type=\"password\" to hide password input\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Create Post</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostCreate;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE9C,MAAMa,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,QAAQ,GAAG;MAAEX,KAAK;MAAEE,IAAI;MAAEU,SAAS,EAAER,QAAQ;MAAEE;IAAS,CAAC,CAAC,CAAC;;IAEjE,IAAI;MACF,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;QAChEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDd,IAAI,EAAEe,IAAI,CAACC,SAAS,CAACP,QAAQ;MAC/B,CAAC,CAAC;MAEF,IAAIE,QAAQ,CAACM,EAAE,EAAE;QACf;QACAlB,QAAQ,CAAC,EAAE,CAAC;QACZE,OAAO,CAAC,EAAE,CAAC;QACXE,WAAW,CAAC,EAAE,CAAC;QACfE,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;QACjBa,KAAK,CAAC,4BAA4B,CAAC;MACrC,CAAC,MAAM;QACLA,KAAK,CAAC,wDAAwD,CAAC;MACjE;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;MAC7DD,KAAK,CAAC,sBAAsB,CAAC;IAC/B;EACF,CAAC;EAED,oBACEvB,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MAAA0B,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1B9B,OAAA;MAAM+B,QAAQ,EAAEpB,YAAa;MAAAe,QAAA,gBAC3B1B,OAAA;QAAA0B,QAAA,gBACE1B,OAAA;UAAOgC,OAAO,EAAC,OAAO;UAAAN,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACrC9B,OAAA;UACEiC,EAAE,EAAC,OAAO;UACVC,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEhC,KAAM;UACbiC,QAAQ,EAAGxB,CAAC,IAAKR,QAAQ,CAACQ,CAAC,CAACyB,MAAM,CAACF,KAAK,CAAE;UAC1CG,QAAQ;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN9B,OAAA;QAAA0B,QAAA,gBACE1B,OAAA;UAAOgC,OAAO,EAAC,MAAM;UAAAN,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACnC9B,OAAA;UACEiC,EAAE,EAAC,MAAM;UACTE,KAAK,EAAE9B,IAAK;UACZ+B,QAAQ,EAAGxB,CAAC,IAAKN,OAAO,CAACM,CAAC,CAACyB,MAAM,CAACF,KAAK,CAAE;UACzCG,QAAQ;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN9B,OAAA;QAAA0B,QAAA,gBACE1B,OAAA;UAAOgC,OAAO,EAAC,WAAW;UAAAN,QAAA,EAAC;QAAqB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACxD9B,OAAA;UACEiC,EAAE,EAAC,WAAW;UACdC,IAAI,EAAC,MAAM;UACXC,KAAK,EAAE5B,QAAS;UAChB6B,QAAQ,EAAGxB,CAAC,IAAKJ,WAAW,CAACI,CAAC,CAACyB,MAAM,CAACF,KAAK;QAAE;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN9B,OAAA;QAAA0B,QAAA,gBACE1B,OAAA;UAAOgC,OAAO,EAAC,UAAU;UAAAN,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC3C9B,OAAA;UACEiC,EAAE,EAAC,UAAU;UACbC,IAAI,EAAC,UAAU,CAAC;UAAA;UAChBC,KAAK,EAAE1B,QAAS;UAChB2B,QAAQ,EAAGxB,CAAC,IAAKF,WAAW,CAACE,CAAC,CAACyB,MAAM,CAACF,KAAK,CAAE;UAC7CG,QAAQ;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN9B,OAAA;QAAQkC,IAAI,EAAC,QAAQ;QAAAR,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAC5B,EAAA,CAjFQD,UAAU;AAAAsC,EAAA,GAAVtC,UAAU;AAmFnB,eAAeA,UAAU;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}