{"ast":null,"code":"import React,{useState,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ContestantsList(){const[contestants,setContestants]=useState({});// Using an object to store contestants keyed by their ID\nuseEffect(()=>{const fetchContestants=async()=>{try{const response=await fetch('http://127.0.0.1:5000/contestants');if(!response.ok){throw new Error('Failed to fetch contestants');}const data=await response.json();const contestantsDict=data.reduce((acc,contestant)=>{acc[contestant.id]=contestant;return acc;},{});setContestants(contestantsDict);}catch(error){console.error('Error fetching contestants:',error);}};fetchContestants();},[]);// The empty dependency array ensures this effect runs once on mount\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Contestants\"}),/*#__PURE__*/_jsx(\"ul\",{children:Object.values(contestants).map(contestant=>/*#__PURE__*/_jsxs(\"li\",{children:[contestant.name,\" - Status: \",contestant.status]},contestant.id))})]});}export default ContestantsList;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","ContestantsList","contestants","setContestants","fetchContestants","response","fetch","ok","Error","data","json","contestantsDict","reduce","acc","contestant","id","error","console","children","Object","values","map","name","status"],"sources":["C:/Users/teste/Desktop/Code/BBH/bbhwebsite/src/components/Contestants.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction ContestantsList() {\r\n  const [contestants, setContestants] = useState({}); // Using an object to store contestants keyed by their ID\r\n\r\n  useEffect(() => {\r\n    const fetchContestants = async () => {\r\n      try {\r\n        const response = await fetch('http://127.0.0.1:5000/contestants');\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch contestants');\r\n        }\r\n        const data = await response.json();\r\n        const contestantsDict = data.reduce((acc, contestant) => {\r\n          acc[contestant.id] = contestant;\r\n          return acc;\r\n        }, {});\r\n        setContestants(contestantsDict);\r\n      } catch (error) {\r\n        console.error('Error fetching contestants:', error);\r\n      }\r\n    };\r\n\r\n    fetchContestants();\r\n  }, []); // The empty dependency array ensures this effect runs once on mount\r\n\r\n  return (\r\n    <div>\r\n      <h1>Contestants</h1>\r\n      <ul>\r\n        {Object.values(contestants).map((contestant) => (\r\n          <li key={contestant.id}>\r\n            {contestant.name} - Status: {contestant.status}\r\n            {/* Render additional contestant details here */}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContestantsList;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnD,QAAS,CAAAC,eAAeA,CAAA,CAAG,CACzB,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAE;AAEpDC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAQ,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACnC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,mCAAmC,CAAC,CACjE,GAAI,CAACD,QAAQ,CAACE,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,6BAA6B,CAAC,CAChD,CACA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAClC,KAAM,CAAAC,eAAe,CAAGF,IAAI,CAACG,MAAM,CAAC,CAACC,GAAG,CAAEC,UAAU,GAAK,CACvDD,GAAG,CAACC,UAAU,CAACC,EAAE,CAAC,CAAGD,UAAU,CAC/B,MAAO,CAAAD,GAAG,CACZ,CAAC,CAAE,CAAC,CAAC,CAAC,CACNV,cAAc,CAACQ,eAAe,CAAC,CACjC,CAAE,MAAOK,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,CAAEA,KAAK,CAAC,CACrD,CACF,CAAC,CAEDZ,gBAAgB,CAAC,CAAC,CACpB,CAAC,CAAE,EAAE,CAAC,CAAE;AAER,mBACEJ,KAAA,QAAAkB,QAAA,eACEpB,IAAA,OAAAoB,QAAA,CAAI,aAAW,CAAI,CAAC,cACpBpB,IAAA,OAAAoB,QAAA,CACGC,MAAM,CAACC,MAAM,CAAClB,WAAW,CAAC,CAACmB,GAAG,CAAEP,UAAU,eACzCd,KAAA,OAAAkB,QAAA,EACGJ,UAAU,CAACQ,IAAI,CAAC,aAAW,CAACR,UAAU,CAACS,MAAM,GADvCT,UAAU,CAACC,EAGhB,CACL,CAAC,CACA,CAAC,EACF,CAAC,CAEV,CAEA,cAAe,CAAAd,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}