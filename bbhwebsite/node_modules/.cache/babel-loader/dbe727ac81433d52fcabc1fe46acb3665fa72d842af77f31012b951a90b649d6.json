{"ast":null,"code":"// components/PostView.js\nimport React,{useState,useEffect}from'react';import{useParams}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function PostView(){const{id}=useParams();// Extract the post ID from the URL\nconst[post,setPost]=useState(null);const[isLoading,setIsLoading]=useState(true);const[error,setError]=useState(null);useEffect(()=>{// Function to fetch post data\nconst fetchPost=async()=>{setIsLoading(true);try{const response=await fetch(\"http://localhost:5000/posts/\".concat(id));// Adjust the URL as needed\nif(!response.ok){throw new Error('Could not fetch post data.');}const data=await response.json();setPost(data);}catch(err){setError(err.message);}finally{setIsLoading(false);}};fetchPost();},[id]);// This effect runs when the component mounts and whenever the `id` changes\nif(isLoading){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});}if(error){return/*#__PURE__*/_jsxs(\"div\",{children:[\"Error: \",error]});}if(!post){return/*#__PURE__*/_jsx(\"div\",{children:\"Post not found.\"});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:post.title}),/*#__PURE__*/_jsx(\"p\",{children:post.body}),post.image_url&&/*#__PURE__*/_jsx(\"img\",{src:post.image_url,alt:post.title})]});}export default PostView;","map":{"version":3,"names":["React","useState","useEffect","useParams","jsx","_jsx","jsxs","_jsxs","PostView","id","post","setPost","isLoading","setIsLoading","error","setError","fetchPost","response","fetch","concat","ok","Error","data","json","err","message","children","title","body","image_url","src","alt"],"sources":["C:/Users/teste/Desktop/Code/BBH/bbhwebsite/src/components/PostView.js"],"sourcesContent":["// components/PostView.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction PostView() {\r\n  const { id } = useParams(); // Extract the post ID from the URL\r\n  const [post, setPost] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to fetch post data\r\n    const fetchPost = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/posts/${id}`); // Adjust the URL as needed\r\n        if (!response.ok) {\r\n          throw new Error('Could not fetch post data.');\r\n        }\r\n        const data = await response.json();\r\n        setPost(data);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchPost();\r\n  }, [id]); // This effect runs when the component mounts and whenever the `id` changes\r\n\r\n  if (isLoading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Error: {error}</div>;\r\n  }\r\n\r\n  if (!post) {\r\n    return <div>Post not found.</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>{post.title}</h1>\r\n      <p>{post.body}</p>\r\n      {/* Display the image if it exists */}\r\n      {post.image_url && <img src={post.image_url} alt={post.title} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostView;\r\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,SAAS,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE7C,QAAS,CAAAC,QAAQA,CAAA,CAAG,CAClB,KAAM,CAAEC,EAAG,CAAC,CAAGN,SAAS,CAAC,CAAC,CAAE;AAC5B,KAAM,CAACO,IAAI,CAAEC,OAAO,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACW,SAAS,CAAEC,YAAY,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CAChD,KAAM,CAACa,KAAK,CAAEC,QAAQ,CAAC,CAAGd,QAAQ,CAAC,IAAI,CAAC,CAExCC,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAc,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC5BH,YAAY,CAAC,IAAI,CAAC,CAClB,GAAI,CACF,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAC,KAAK,gCAAAC,MAAA,CAAgCV,EAAE,CAAE,CAAC,CAAE;AACnE,GAAI,CAACQ,QAAQ,CAACG,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,4BAA4B,CAAC,CAC/C,CACA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAL,QAAQ,CAACM,IAAI,CAAC,CAAC,CAClCZ,OAAO,CAACW,IAAI,CAAC,CACf,CAAE,MAAOE,GAAG,CAAE,CACZT,QAAQ,CAACS,GAAG,CAACC,OAAO,CAAC,CACvB,CAAC,OAAS,CACRZ,YAAY,CAAC,KAAK,CAAC,CACrB,CACF,CAAC,CAEDG,SAAS,CAAC,CAAC,CACb,CAAC,CAAE,CAACP,EAAE,CAAC,CAAC,CAAE;AAEV,GAAIG,SAAS,CAAE,CACb,mBAAOP,IAAA,QAAAqB,QAAA,CAAK,YAAU,CAAK,CAAC,CAC9B,CAEA,GAAIZ,KAAK,CAAE,CACT,mBAAOP,KAAA,QAAAmB,QAAA,EAAK,SAAO,CAACZ,KAAK,EAAM,CAAC,CAClC,CAEA,GAAI,CAACJ,IAAI,CAAE,CACT,mBAAOL,IAAA,QAAAqB,QAAA,CAAK,iBAAe,CAAK,CAAC,CACnC,CAEA,mBACEnB,KAAA,QAAAmB,QAAA,eACErB,IAAA,OAAAqB,QAAA,CAAKhB,IAAI,CAACiB,KAAK,CAAK,CAAC,cACrBtB,IAAA,MAAAqB,QAAA,CAAIhB,IAAI,CAACkB,IAAI,CAAI,CAAC,CAEjBlB,IAAI,CAACmB,SAAS,eAAIxB,IAAA,QAAKyB,GAAG,CAAEpB,IAAI,CAACmB,SAAU,CAACE,GAAG,CAAErB,IAAI,CAACiB,KAAM,CAAE,CAAC,EAC7D,CAAC,CAEV,CAEA,cAAe,CAAAnB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}