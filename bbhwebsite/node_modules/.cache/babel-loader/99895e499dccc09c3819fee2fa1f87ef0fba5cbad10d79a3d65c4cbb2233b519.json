{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\teste\\\\Desktop\\\\Code\\\\BBH\\\\bbhwebsite\\\\src\\\\components\\\\AddContestant.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ContestantsPage() {\n  _s();\n  const [contestants, setContestants] = useState([]);\n  const addNewContestant = async () => {\n    // Define the blank contestant data\n    const newContestantData = {\n      name: '',\n      // Assuming 'name' can be empty initially\n      image_url: '',\n      eviction_image_url: '',\n      status: 'Sem Status' // Assuming there's a default status for new contestants\n    };\n    try {\n      // Make an API call to the backend to add the new contestant\n      const response = await fetch('http://127.0.0.1:5000/create-contestant', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newContestantData)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to add new contestant');\n      }\n\n      // Optionally, fetch the updated list of contestants from the backend\n      // Or update the local state to reflect the addition\n      const addedContestant = await response.json(); // Assuming your API returns the added contestant\n      setContestants([...contestants, addedContestant]);\n    } catch (error) {\n      console.error('Error adding new contestant:', error);\n      // Handle the error (e.g., show an error message)\n    }\n  };\n  useEffect(() => {\n    const fetchContestants = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:5000/contestants');\n        if (!response.ok) {\n          throw new Error('Failed to fetch contestants');\n        }\n        const data = await response.json();\n        setContestants(data);\n      } catch (error) {\n        console.error('Error fetching contestants:', error);\n      }\n    };\n    fetchContestants();\n  }, []);\n  const updateContestant = async (id, updatedContestant) => {\n    try {\n      const response = await fetch(`http://127.0.0.1:5000/contestants/${id}`, {\n        method: 'PUT',\n        // Assuming your backend supports PUT requests for updates\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updatedContestant)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update contestant');\n      }\n\n      // Refetch contestants to reflect the update\n      // Alternatively, you can update the state locally without refetching\n      const updatedData = await response.json();\n      setContestants(contestants.map(contestant => contestant.id === id ? updatedData : contestant));\n    } catch (error) {\n      console.error('Error updating contestant:', error);\n    }\n  };\n  const handleSubmit = (e, id) => {\n    const formData = new FormData(e.target);\n    const updatedContestant = Object.fromEntries(formData.entries());\n    updateContestant(id, updatedContestant);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [contestants.map(contestant => /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => handleSubmit(e, contestant.id),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"name\",\n        defaultValue: contestant.name,\n        placeholder: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"image_url\",\n        defaultValue: contestant.image_url,\n        placeholder: \"Image URL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"eviction_image_url\",\n        defaultValue: contestant.eviction_image_url,\n        placeholder: \"Eviction Image URL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"status\",\n        defaultValue: contestant.status,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Emparedado\",\n          children: \"Emparedado\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Eliminado\",\n          children: \"Eliminado\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Anjo\",\n          children: \"Anjo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Lider\",\n          children: \"L\\xEDder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Casa de vidro\",\n          children: \"Casa de Vidro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Sem Status\",\n          children: \"Sem Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, contestant.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addNewContestant,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(ContestantsPage, \"2LtDvJ6FDUqcsKKgwMd79KXMC7k=\");\n_c = ContestantsPage;\nexport default ContestantsPage;\nvar _c;\n$RefreshReg$(_c, \"ContestantsPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ContestantsPage","_s","contestants","setContestants","addNewContestant","newContestantData","name","image_url","eviction_image_url","status","response","fetch","method","headers","body","JSON","stringify","ok","Error","addedContestant","json","error","console","fetchContestants","data","updateContestant","id","updatedContestant","updatedData","map","contestant","handleSubmit","e","formData","FormData","target","Object","fromEntries","entries","children","onSubmit","defaultValue","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","value","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/teste/Desktop/Code/BBH/bbhwebsite/src/components/AddContestant.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction ContestantsPage() {\r\n  const [contestants, setContestants] = useState([]);\r\n\r\n  const addNewContestant = async () => {\r\n    // Define the blank contestant data\r\n    const newContestantData = {\r\n      name: '', // Assuming 'name' can be empty initially\r\n      image_url: '',\r\n      eviction_image_url: '',\r\n      status: 'Sem Status', // Assuming there's a default status for new contestants\r\n    };\r\n\r\n    try {\r\n      // Make an API call to the backend to add the new contestant\r\n      const response = await fetch('http://127.0.0.1:5000/create-contestant', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(newContestantData),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to add new contestant');\r\n      }\r\n\r\n      // Optionally, fetch the updated list of contestants from the backend\r\n      // Or update the local state to reflect the addition\r\n      const addedContestant = await response.json(); // Assuming your API returns the added contestant\r\n      setContestants([...contestants, addedContestant]);\r\n    } catch (error) {\r\n      console.error('Error adding new contestant:', error);\r\n      // Handle the error (e.g., show an error message)\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchContestants = async () => {\r\n      try {\r\n        const response = await fetch('http://127.0.0.1:5000/contestants');\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch contestants');\r\n        }\r\n        const data = await response.json();\r\n        setContestants(data);\r\n      } catch (error) {\r\n        console.error('Error fetching contestants:', error);\r\n      }\r\n    };\r\n\r\n    fetchContestants();\r\n  }, []);\r\n\r\n  const updateContestant = async (id, updatedContestant) => {\r\n    try {\r\n      const response = await fetch(`http://127.0.0.1:5000/contestants/${id}`, {\r\n        method: 'PUT', // Assuming your backend supports PUT requests for updates\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(updatedContestant),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to update contestant');\r\n      }\r\n\r\n      // Refetch contestants to reflect the update\r\n      // Alternatively, you can update the state locally without refetching\r\n      const updatedData = await response.json();\r\n      setContestants(contestants.map(contestant => contestant.id === id ? updatedData : contestant));\r\n    } catch (error) {\r\n      console.error('Error updating contestant:', error);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e, id) => {\r\n    const formData = new FormData(e.target);\r\n    const updatedContestant = Object.fromEntries(formData.entries());\r\n    updateContestant(id, updatedContestant);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {contestants.map(contestant => (\r\n        <form key={contestant.id} onSubmit={(e) => handleSubmit(e, contestant.id)}>\r\n          <input name=\"name\" defaultValue={contestant.name} placeholder=\"Name\" />\r\n          <input name=\"image_url\" defaultValue={contestant.image_url} placeholder=\"Image URL\" />\r\n          <input name=\"eviction_image_url\" defaultValue={contestant.eviction_image_url} placeholder=\"Eviction Image URL\" />\r\n          <select name=\"status\" defaultValue={contestant.status}>\r\n            <option value=\"Emparedado\">Emparedado</option>\r\n            <option value=\"Eliminado\">Eliminado</option>\r\n            <option value=\"Anjo\">Anjo</option>\r\n            <option value=\"Lider\">Líder</option>\r\n            <option value=\"Casa de vidro\">Casa de Vidro</option>\r\n            <option value=\"Sem Status\">Sem Status</option>\r\n          </select>\r\n          <button type=\"submit\">Update</button>\r\n        </form>\r\n      ))}\r\n      <button onClick={addNewContestant}>+</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContestantsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}