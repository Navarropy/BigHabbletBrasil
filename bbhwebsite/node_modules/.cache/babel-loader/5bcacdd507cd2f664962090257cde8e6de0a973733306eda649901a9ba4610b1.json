{"ast":null,"code":"// components/PostsList.js\nimport React,{useState,useEffect}from'react';import{Link}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function PostsList(){const[posts,setPosts]=useState([]);useEffect(()=>{const fetchPosts=async()=>{try{const response=await fetch('http://127.0.0.1:5000/posts');if(!response.ok)throw new Error('Data could not be fetched!');const posts=await response.json();setPosts(posts);}catch(error){console.error('Error fetching posts:',error);}};fetchPosts();},[]);// Empty dependency array means this effect runs once on mount\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Posts\"}),posts.length?/*#__PURE__*/_jsx(\"ul\",{children:posts.map(post=>/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(Link,{to:\"/posts/\".concat(post.id),children:post.title}),\" - \",post.body]},post.id))}):/*#__PURE__*/_jsx(\"p\",{children:\"No posts found\"}),/*#__PURE__*/_jsx(Link,{to:\"/posts/new\",children:\"Create a New Post\"})]});}export default PostsList;","map":{"version":3,"names":["React","useState","useEffect","Link","jsx","_jsx","jsxs","_jsxs","PostsList","posts","setPosts","fetchPosts","response","fetch","ok","Error","json","error","console","children","length","map","post","to","concat","id","title","body"],"sources":["C:/Users/teste/Desktop/Code/BBH/bbhwebsite/src/components/PostsList.js"],"sourcesContent":["// components/PostsList.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction PostsList() {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      try {\r\n        const response = await fetch('http://127.0.0.1:5000/posts');\r\n        if (!response.ok) throw new Error('Data could not be fetched!');\r\n        \r\n        const posts = await response.json();\r\n        setPosts(posts);\r\n      } catch (error) {\r\n        console.error('Error fetching posts:', error);\r\n      }\r\n    };\r\n\r\n    fetchPosts();\r\n  }, []); // Empty dependency array means this effect runs once on mount\r\n\r\n  return (\r\n    <div>\r\n      <h1>Posts</h1>\r\n      {posts.length ? (\r\n        <ul>\r\n          {posts.map(post => (\r\n            <li key={post.id}>\r\n              <Link to={`/posts/${post.id}`}>{post.title}</Link> - {post.body}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>No posts found</p>\r\n      )}\r\n      <Link to=\"/posts/new\">Create a New Post</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostsList;\r\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,IAAI,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExC,QAAS,CAAAC,SAASA,CAAA,CAAG,CACnB,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAEtCC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAS,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,6BAA6B,CAAC,CAC3D,GAAI,CAACD,QAAQ,CAACE,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,4BAA4B,CAAC,CAE/D,KAAM,CAAAN,KAAK,CAAG,KAAM,CAAAG,QAAQ,CAACI,IAAI,CAAC,CAAC,CACnCN,QAAQ,CAACD,KAAK,CAAC,CACjB,CAAE,MAAOQ,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAC/C,CACF,CAAC,CAEDN,UAAU,CAAC,CAAC,CACd,CAAC,CAAE,EAAE,CAAC,CAAE;AAER,mBACEJ,KAAA,QAAAY,QAAA,eACEd,IAAA,OAAAc,QAAA,CAAI,OAAK,CAAI,CAAC,CACbV,KAAK,CAACW,MAAM,cACXf,IAAA,OAAAc,QAAA,CACGV,KAAK,CAACY,GAAG,CAACC,IAAI,eACbf,KAAA,OAAAY,QAAA,eACEd,IAAA,CAACF,IAAI,EAACoB,EAAE,WAAAC,MAAA,CAAYF,IAAI,CAACG,EAAE,CAAG,CAAAN,QAAA,CAAEG,IAAI,CAACI,KAAK,CAAO,CAAC,MAAG,CAACJ,IAAI,CAACK,IAAI,GADxDL,IAAI,CAACG,EAEV,CACL,CAAC,CACA,CAAC,cAELpB,IAAA,MAAAc,QAAA,CAAG,gBAAc,CAAG,CACrB,cACDd,IAAA,CAACF,IAAI,EAACoB,EAAE,CAAC,YAAY,CAAAJ,QAAA,CAAC,mBAAiB,CAAM,CAAC,EAC3C,CAAC,CAEV,CAEA,cAAe,CAAAX,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}